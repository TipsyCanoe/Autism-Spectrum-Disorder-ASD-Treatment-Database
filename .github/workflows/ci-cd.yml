name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run backend and frontend tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/testing-website/package-lock.json

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          # Minimal deps for tests; avoid heavy transformers in CI
          pip install -r backend/requirements-test.txt

      - name: Install frontend dependencies
        working-directory: frontend/testing-website
        run: npm ci

      - name: Install pytest
        run: |
          pip install pytest

      - name: Run backend tests (lightweight)
        working-directory: backend
        env:
          DISABLE_MODEL_LOADING: '1'
        run: |
          pytest tests -m "not e2e and not performance" -q

      # Optional: run frontend tests (uncomment when stable)
      # - name: Run frontend tests
      #   working-directory: frontend/testing-website
      #   run: npm test -- --watchAll=false

  deploy:
    name: Deploy to Production
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://star.cs.wwu.edu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy over SSH
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=yes "$SSH_USER@$SSH_HOST" << 'EOF'
            set -e
            cd /opt/asd-db
            # Ensure repo is clean and up to date
            git fetch --all --prune
            git reset --hard origin/main
            # Run deployment script
            chmod +x deploy-production.sh
            ./deploy-production.sh
          EOF
